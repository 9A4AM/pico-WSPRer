/// ------------------------------------------------------- //
/// This file is autogenerated by pioasm in build directory //
/// It is copied here FOR DOCUMENTATION PURPOSES ONLY       //
/// ------------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --- //
// dco //
// --- //

#define dco_wrap_target 0
#define dco_wrap 12
/// @Brief PIO DCO assembly language code
/// @Note Detailed commented code is in dco2.pio file

static const uint16_t dco_program_instructions[] = {
            //     .wrap_target
    0x6040, //  0: out    y, 32                      
    0xa022, //  1: mov    x, y                       
    0x0042, //  2: jmp    x--, 2                     
    0xe001, //  3: set    pins, 1                    
    0xa122, //  4: mov    x, y                   [1] 
    0x0045, //  5: jmp    x--, 5                     
    0xe002, //  6: set    pins, 2                    
    0xa122, //  7: mov    x, y                   [1] 
    0x0048, //  8: jmp    x--, 8                     
    0xe001, //  9: set    pins, 1                    
    0xa122, // 10: mov    x, y                   [1] 
    0x004b, // 11: jmp    x--, 11                    
    0xe002, // 12: set    pins, 2                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dco_program = {
    .instructions = dco_program_instructions,
    .length = 13,
    .origin = -1,
};

static inline pio_sm_config dco_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dco_wrap_target, offset + dco_wrap);
    return c;
}

#define PIOASM_DELAY_CYCLES 4       /// fixed delay cycles per halfperiod

/// @brief Inicialization of PIO oscilator
/// @param pio PIO number
/// @param sm Status machine number
/// @param pio offset PIO program offset
/// @param pio pin Output pin (we use two pins for output [pin] and [pin + 1])
/// @return No return. It just starts the PIO 
static inline void dco_program_init(PIO pio, uint sm, uint offset, uint pin)
{
    pio_sm_config c = dco_program_get_default_config(offset);
    sm_config_set_out_shift(&c, true, true, 32);    // Autopull from FIFO
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);  // Join RX and TX FIFOs
    sm_config_set_out_pins(&c, pin, 2);				// Two output pins
    pio_gpio_init(pio, pin);                        // Init first pin
	pio_gpio_init(pio, pin+1); 					    // Init second pin
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 2, true); //Set pins to output
    sm_config_set_clkdiv_int_frac(&c, 1u, 0u);      // PIO CLK = system CLK 
    pio_sm_init(pio, sm, offset, &c);               // PIO initialized 
    pio_sm_set_enabled(pio, sm, true);              // PIO started
}

#endif

